{"ast":null,"code":"import { ADD_CITY, REMOVE_CITY, RESET_CITY, SET_CITY } from './actions';\nimport { loadStorage } from '../../../utils/localStore';\nconst initialState = {\n  targetCity: '',\n  cities: localStorage.getItem('state') || []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      console.log('AKCE', action, \"PAYLOAD\", action.payload);\n      return { ...state,\n        cities: [{\n          name: state.targetCity,\n          time: new Date(),\n          data: action.payload\n        }, ...state.cities]\n      };\n\n    case SET_CITY:\n      return { ...state,\n        targetCity: action.payload\n      };\n\n    case REMOVE_CITY:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/javascript/s1-redux/src/features/Weather/store/weatherReducer.js"],"names":["ADD_CITY","REMOVE_CITY","RESET_CITY","SET_CITY","loadStorage","initialState","targetCity","cities","localStorage","getItem","reducer","state","action","type","console","log","payload","name","time","Date","data"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,QAA5C,QAA4D,WAA5D;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;AAFtB,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,QAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,MAApB,EAA4B,SAA5B,EAAuCA,MAAM,CAACI,OAA9C;AACA,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,MAAM,EAAE,CACN;AACEU,UAAAA,IAAI,EAAEN,KAAK,CAACL,UADd;AAEEY,UAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFR;AAGEC,UAAAA,IAAI,EAAER,MAAM,CAACI;AAHf,SADM,EAMN,GAAGL,KAAK,CAACJ,MANH;AAFH,OAAP;;AAWF,SAAKJ,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,UAAU,EAAEM,MAAM,CAACI;AAFd,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGU;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AAxBF;AA0BD,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import { ADD_CITY, REMOVE_CITY, RESET_CITY, SET_CITY } from './actions'\r\nimport {loadStorage} from '../../../utils/localStore'\r\n\r\nconst initialState = {\r\n  targetCity: '',\r\n  cities: localStorage.getItem('state') || [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case ADD_CITY:\r\n    console.log('AKCE', action, \"PAYLOAD\", action.payload)\r\n    return {\r\n      ...state,\r\n      cities: [\r\n        {\r\n          name: state.targetCity,\r\n          time: new Date(),\r\n          data: action.payload,\r\n        },\r\n        ...state.cities,\r\n      ],\r\n    }\r\n  case SET_CITY:\r\n    return {\r\n      ...state,\r\n      targetCity: action.payload,\r\n    }\r\n  case REMOVE_CITY:\r\n    return {\r\n      ...state,\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}
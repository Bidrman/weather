{"ast":null,"code":"import axios from 'axios';\nexport const openWeatherMap = cityName => {\n  return axios.create({\n    baseURL: `api.openweathermap.org/data/2.5/forecast?q=${cityName}&lang=cz&units=metric&appid=64128163cebd1a19281dea72993d1cd6`\n  });\n}; // old fetch version\n// export const fetchWeather = (cityName) => {\n//   return fetch(\n//     `api.openweathermap.org/data/2.5/forecast?q=${cityName}&lang=cz&units=metric&appid=64128163cebd1a19281dea72993d1cd6`,\n//   )\n//     .then((response) => {\n//       if (response.status !== 200) {\n//         alert('Request status = ' + response.status)\n//       }\n//       return response.json()\n//     })\n//     .then((data) => {\n//       //console.log('DATA: ', data)\n//       //console.log(data.data.map(item => item.temp))\n//       return data\n//     })\n// }","map":{"version":3,"sources":["C:/javascript/weather/src/features/FetchAPI/fetchWeather.jsx"],"names":["axios","openWeatherMap","cityName","create","baseURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAC1C,SAAOF,KAAK,CAACG,MAAN,CAAa;AAClBC,IAAAA,OAAO,EAAG,8CAA6CF,QAAS;AAD9C,GAAb,CAAP;AAGD,CAJM,C,CAMP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\r\n\r\nexport const openWeatherMap = (cityName) => {\r\n  return axios.create({\r\n    baseURL: `api.openweathermap.org/data/2.5/forecast?q=${cityName}&lang=cz&units=metric&appid=64128163cebd1a19281dea72993d1cd6`,\r\n  })\r\n}\r\n\r\n// old fetch version\r\n\r\n// export const fetchWeather = (cityName) => {\r\n//   return fetch(\r\n//     `api.openweathermap.org/data/2.5/forecast?q=${cityName}&lang=cz&units=metric&appid=64128163cebd1a19281dea72993d1cd6`,\r\n//   )\r\n//     .then((response) => {\r\n//       if (response.status !== 200) {\r\n//         alert('Request status = ' + response.status)\r\n//       }\r\n//       return response.json()\r\n//     })\r\n//     .then((data) => {\r\n//       //console.log('DATA: ', data)\r\n//       //console.log(data.data.map(item => item.temp))\r\n//       return data\r\n//     })\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}
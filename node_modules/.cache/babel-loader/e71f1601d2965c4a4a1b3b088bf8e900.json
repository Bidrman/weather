{"ast":null,"code":"import { fetchWeather, weatherBit } from '../features/FetchAPI/fetchWeather';\nimport { FETCH_START, FETCH_SUCCESS, FETCH_FAIL } from '../features/Weather/store/actions';\nexport const fetchForecastStart = store => next => async action => {\n  if (action.type === FETCH_START) {\n    try {\n      const response = await weatherBit.get(action.payload);\n      setTimeout(next({\n        type: FETCH_START,\n        payload: action.payload\n      }), 80000);\n      next({\n        type: FETCH_SUCCESS,\n        payload: response\n      });\n    } catch (error) {\n      next({\n        type: FETCH_FAIL,\n        payload: error\n      });\n    }\n  }\n\n  return next(action);\n};\nexport const fetchForecastSuccess = store => next => async action => {\n  console.log(action);\n  return next(action);\n};\nexport const fetchForecastFail = store => next => async action => {\n  return next(action);\n};","map":{"version":3,"sources":["C:/javascript/weather/src/middlewares/ForecastMiddleware.jsx"],"names":["fetchWeather","weatherBit","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","fetchForecastStart","store","next","action","type","response","get","payload","setTimeout","error","fetchForecastSuccess","console","log","fetchForecastFail"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,mCAAzC;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,UAHF,QAIO,mCAJP;AAMA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACvE,MAAIA,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMT,UAAU,CAACU,GAAX,CAAeH,MAAM,CAACI,OAAtB,CAAvB;AAEAC,MAAAA,UAAU,CAACN,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEP,WAAR;AAAqBU,QAAAA,OAAO,EAAEJ,MAAM,CAACI;AAArC,OAAD,CAAL,EAAuD,KAAvD,CAAV;AAEAL,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEN,aAAR;AAAuBS,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAJ;AACD,KAND,CAME,OAAOI,KAAP,EAAc;AACdP,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEL,UAAR;AAAoBQ,QAAAA,OAAO,EAAEE;AAA7B,OAAD,CAAJ;AACD;AACF;;AAED,SAAOP,IAAI,CAACC,MAAD,CAAX;AACD,CAdM;AAgBP,OAAO,MAAMO,oBAAoB,GAAIT,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACzEQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAHM;AAKP,OAAO,MAAMU,iBAAiB,GAAIZ,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACtE,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAFM","sourcesContent":["import { fetchWeather, weatherBit } from '../features/FetchAPI/fetchWeather'\r\nimport {\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAIL,\r\n} from '../features/Weather/store/actions'\r\n\r\nexport const fetchForecastStart = (store) => (next) => async (action) => {\r\n  if (action.type === FETCH_START) {\r\n    try {\r\n      const response = await weatherBit.get(action.payload)\r\n\r\n      setTimeout(next({ type: FETCH_START, payload: action.payload }), 80000)\r\n\r\n      next({ type: FETCH_SUCCESS, payload: response })\r\n    } catch (error) {\r\n      next({ type: FETCH_FAIL, payload: error })\r\n    }\r\n  }\r\n\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastSuccess = (store) => (next) => async (action) => {\r\n  console.log(action)\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastFail = (store) => (next) => async (action) => {\r\n  return next(action)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
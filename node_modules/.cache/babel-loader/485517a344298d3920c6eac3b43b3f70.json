{"ast":null,"code":"var _jsxFileName = \"C:\\\\javascript\\\\weather\\\\src\\\\features\\\\Weather\\\\containers\\\\WeatherListContainer.jsx\";\nimport React from 'react';\nimport WeatherList from '../components/WeatherList';\nimport WeatherItemContainer from './WeatherItemContainer';\nimport { SET_CITY, ADD_CITY, UPDATE_CITIES } from '../store/actions';\nimport { fetchWeather } from '../../FetchAPI/fetchWeather';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { lifecycle } from 'recompose';\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.weather.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // const updateCityForecast = (cities) => {\n  //   const promises = cities.map((city) => (city.data = fetchWeather(city.name)))\n  //   Promise.all(promises).then((values) => {\n  //     const transformedData = values.map((city) => {\n  //       return {\n  //         name: city.city.name,\n  //         date: new Date(),\n  //         data: city.list.filter((part, index) => index <= 3),\n  //       }\n  //     })\n  //     dispatch({ type: UPDATE_CITIES, payload: transformedData })\n  //   })\n  // }\n  const fetchForUpdate = () => {};\n\n  return {\n    //updateCityForecast: updateCityForecast,\n    fetchForUpdate: fetchForUpdate\n  };\n};\n\nconst WeatherListContainer = props => {\n  // ZDE bude componentDidMount?\n  const {\n    cities\n  } = props;\n  const cityData = cities.map(oneCity => {\n    return React.createElement(WeatherItemContainer, {\n      name: oneCity.name,\n      data: oneCity.data,\n      key: oneCity.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  });\n  return React.createElement(WeatherList, {\n    item: cityData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n};\n\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), lifecycle({\n  componentDidMount() {\n    this.props.updateCityForecast(this.props.cities);\n  }\n\n}));\nexport default enhance(WeatherListContainer);","map":{"version":3,"sources":["C:/javascript/weather/src/features/Weather/containers/WeatherListContainer.jsx"],"names":["React","WeatherList","WeatherItemContainer","SET_CITY","ADD_CITY","UPDATE_CITIES","fetchWeather","compose","connect","lifecycle","mapStateToProps","state","cities","weather","mapDispatchToProps","dispatch","fetchForUpdate","WeatherListContainer","props","cityData","map","oneCity","name","data","enhance","componentDidMount","updateCityForecast"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,aAA7B,QAAkD,kBAAlD;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAcD;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;AAEA,SAAO;AACL;AACAA,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAID,CAtBD;;AAwBA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC;AAEA,QAAM;AAAEN,IAAAA;AAAF,MAAaM,KAAnB;AACA,QAAMC,QAAQ,GAAGP,MAAM,CAACQ,GAAP,CAAYC,OAAD,IAAa;AACvC,WACE,oBAAC,oBAAD;AACE,MAAA,IAAI,EAAEA,OAAO,CAACC,IADhB;AAEE,MAAA,IAAI,EAAED,OAAO,CAACE,IAFhB;AAGE,MAAA,GAAG,EAAEF,OAAO,CAACC,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARgB,CAAjB;AAUA,SAAO,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEH,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAfD;;AAiBA,MAAMK,OAAiB,GAAGjB,OAAO,CAC/BC,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CADwB,EAE/BL,SAAS,CAAC;AACRgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWQ,kBAAX,CAA8B,KAAKR,KAAL,CAAWN,MAAzC;AACD;;AAHO,CAAD,CAFsB,CAAjC;AASA,eAAeY,OAAO,CAACP,oBAAD,CAAtB","sourcesContent":["import React from 'react'\r\nimport WeatherList from '../components/WeatherList'\r\nimport WeatherItemContainer from './WeatherItemContainer'\r\nimport { SET_CITY, ADD_CITY, UPDATE_CITIES } from '../store/actions'\r\nimport { fetchWeather } from '../../FetchAPI/fetchWeather'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { lifecycle } from 'recompose'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cities: state.weather.cities,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // const updateCityForecast = (cities) => {\r\n  //   const promises = cities.map((city) => (city.data = fetchWeather(city.name)))\r\n\r\n  //   Promise.all(promises).then((values) => {\r\n  //     const transformedData = values.map((city) => {\r\n  //       return {\r\n  //         name: city.city.name,\r\n  //         date: new Date(),\r\n  //         data: city.list.filter((part, index) => index <= 3),\r\n  //       }\r\n  //     })\r\n  //     dispatch({ type: UPDATE_CITIES, payload: transformedData })\r\n  //   })\r\n  // }\r\n\r\n  const fetchForUpdate = () => {}\r\n\r\n  return {\r\n    //updateCityForecast: updateCityForecast,\r\n    fetchForUpdate: fetchForUpdate,\r\n  }\r\n}\r\n\r\nconst WeatherListContainer = (props) => {\r\n  // ZDE bude componentDidMount?\r\n\r\n  const { cities } = props\r\n  const cityData = cities.map((oneCity) => {\r\n    return (\r\n      <WeatherItemContainer\r\n        name={oneCity.name}\r\n        data={oneCity.data}\r\n        key={oneCity.name}\r\n      />\r\n    )\r\n  })\r\n\r\n  return <WeatherList item={cityData} />\r\n}\r\n\r\nconst enhance: Function = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n    componentDidMount() {\r\n      this.props.updateCityForecast(this.props.cities)\r\n    },\r\n  }),\r\n)\r\n\r\nexport default enhance(WeatherListContainer)\r\n"]},"metadata":{},"sourceType":"module"}
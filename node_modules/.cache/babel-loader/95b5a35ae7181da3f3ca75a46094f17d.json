{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createReducer from './combineReducers';\nimport { saveWeatherStorage, saveTodoStorage } from './localStore';\nimport { fetchForecastStart, fetchForecastSuccess, fetchForecastFail } from '../middlewares/ForecastMiddleware';\nconst store = createStore(createReducer(), compose(applyMiddleware(fetchForecastStart, fetchForecastSuccess, fetchForecastFail), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nstore.subscribe(() => {\n  //console.log('store',store.getState())\n  saveWeatherStorage(store.getState().weather.cities);\n  saveTodoStorage(store.getState().todos.todoTasks);\n});\nexport default store;","map":{"version":3,"sources":["C:/javascript/weather/src/utils/store.js"],"names":["createStore","compose","applyMiddleware","createReducer","saveWeatherStorage","saveTodoStorage","fetchForecastStart","fetchForecastSuccess","fetchForecastFail","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","weather","cities","todos","todoTasks"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,cAApD;AACA,SAAQC,kBAAR,EAA4BC,oBAA5B,EAAkDC,iBAAlD,QAA0E,mCAA1E;AAEA,MAAMC,KAAK,GAAGT,WAAW,CACvBG,aAAa,EADU,EAEvBF,OAAO,CACLC,eAAe,CAACI,kBAAD,EAAqBC,oBAArB,EAA2CC,iBAA3C,CADV,EAELE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAFgB,CAAzB;AAQAF,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB;AACAR,EAAAA,kBAAkB,CAACK,KAAK,CAACI,QAAN,GAAiBC,OAAjB,CAAyBC,MAA1B,CAAlB;AACAV,EAAAA,eAAe,CAACI,KAAK,CAACI,QAAN,GAAiBG,KAAjB,CAAuBC,SAAxB,CAAf;AACD,CAJD;AAMA,eAAeR,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\r\nimport createReducer from './combineReducers'\r\nimport { saveWeatherStorage, saveTodoStorage } from './localStore'\r\nimport {fetchForecastStart, fetchForecastSuccess, fetchForecastFail} from '../middlewares/ForecastMiddleware'\r\n    \r\nconst store = createStore(\r\n  createReducer(),\r\n  compose(\r\n    applyMiddleware(fetchForecastStart, fetchForecastSuccess, fetchForecastFail),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  ),\r\n)\r\n    \r\nstore.subscribe(() => {\r\n  //console.log('store',store.getState())\r\n  saveWeatherStorage(store.getState().weather.cities)\r\n  saveTodoStorage(store.getState().todos.todoTasks)\r\n})\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}
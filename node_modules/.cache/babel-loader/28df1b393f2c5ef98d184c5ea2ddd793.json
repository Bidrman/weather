{"ast":null,"code":"import axios from 'axios';\nexport const weatherBit = cityName => {\n  return axios.create({\n    baseURL: `https://api.weatherbit.io/v2.0/forecast/hourly?city=${cityName},cz&key=165c8bbb35604923b89f37cf29003df3&hours=5`\n  });\n};\nexport const fetchWeather = cityName => {\n  return fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?city=${cityName},cz&key=165c8bbb35604923b89f37cf29003df3&hours=5`).then(response => {\n    if (response.status !== 200) {\n      alert('Request status = ' + response.status);\n    }\n\n    return response.json();\n  }).then(data => {\n    //console.log('DATA: ', data)\n    //console.log(data.data.map(item => item.temp))\n    return data;\n  });\n};","map":{"version":3,"sources":["C:/javascript/weather/src/features/FetchAPI/fetchWeather.jsx"],"names":["axios","weatherBit","cityName","create","baseURL","fetchWeather","fetch","then","response","status","alert","json","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc;AACtC,SAAOF,KAAK,CAACG,MAAN,CAAa;AAClBC,IAAAA,OAAO,EAAG,uDAAsDF,QAAS;AADvD,GAAb,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAIH,QAAD,IAAc;AACxC,SAAOI,KAAK,CACT,uDAAsDJ,QAAS,kDADtD,CAAL,CAGJK,IAHI,CAGEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,KAAK,CAAC,sBAAsBF,QAAQ,CAACC,MAAhC,CAAL;AACD;;AACD,WAAOD,QAAQ,CAACG,IAAT,EAAP;AACD,GARI,EASJJ,IATI,CASEK,IAAD,IAAU;AACd;AACA;AACA,WAAOA,IAAP;AACD,GAbI,CAAP;AAcD,CAfM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const weatherBit = (cityName) => {\r\n  return axios.create({\r\n    baseURL: `https://api.weatherbit.io/v2.0/forecast/hourly?city=${cityName},cz&key=165c8bbb35604923b89f37cf29003df3&hours=5`,\r\n  })\r\n}\r\n\r\nexport const fetchWeather = (cityName) => {\r\n  return fetch(\r\n    `https://api.weatherbit.io/v2.0/forecast/hourly?city=${cityName},cz&key=165c8bbb35604923b89f37cf29003df3&hours=5`,\r\n  )\r\n    .then((response) => {\r\n      if (response.status !== 200) {\r\n        alert('Request status = ' + response.status)\r\n      }\r\n      return response.json()\r\n    })\r\n    .then((data) => {\r\n      //console.log('DATA: ', data)\r\n      //console.log(data.data.map(item => item.temp))\r\n      return data\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { fetchWeather } from '../features/FetchAPI/fetchWeather';\nimport { FETCH_START, FETCH_SUCCESS, FETCH_FAIL, UPDATE_CITY } from '../features/Weather/store/actions';\nexport const fetchForecastStart = store => next => async action => {\n  if (action.type === FETCH_START) {\n    try {\n      const response = await fetchWeather(action.payload);\n      next({\n        type: FETCH_SUCCESS,\n        payload: response\n      });\n    } catch (error) {\n      next({\n        type: FETCH_FAIL,\n        payload: error\n      });\n    }\n  }\n\n  return next(action);\n};\nexport const fetchForecastSuccess = store => next => async action => {\n  console.log(action);\n\n  if (action.type === FETCH_SUCCESS) {\n    // opetovne volani\n    setTimeout(next({\n      type: FETCH_START,\n      payload: action.payload.name\n    }), 10000);\n    console.log('AKCE FETCH SUCCESS', action);\n    const next_action = {\n      type: UPDATE_CITY,\n      payload: action.payload\n    };\n    return next(next_action);\n  }\n\n  return next(action);\n};\nexport const fetchForecastFail = store => next => async action => {\n  console.log(action);\n\n  if (action.type === FETCH_FAIL) {\n    alert('spojeni se serverem nebylo uspesne, nastala chyba: ' + action.payload);\n    return next(action);\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["C:/javascript/weather/src/middlewares/ForecastMiddleware.jsx"],"names":["fetchWeather","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","UPDATE_CITY","fetchForecastStart","store","next","action","type","response","payload","error","fetchForecastSuccess","console","log","setTimeout","name","next_action","fetchForecastFail","alert"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mCAA7B;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,WAJF,QAKO,mCALP;AAOA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACvE,MAAIA,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMV,YAAY,CAACQ,MAAM,CAACG,OAAR,CAAnC;AACAJ,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEP,aAAR;AAAuBS,QAAAA,OAAO,EAAED;AAAhC,OAAD,CAAJ;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdL,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEN,UAAR;AAAoBQ,QAAAA,OAAO,EAAEC;AAA7B,OAAD,CAAJ;AACD;AACF;;AAED,SAAOL,IAAI,CAACC,MAAD,CAAX;AACD,CAXM;AAaP,OAAO,MAAMK,oBAAoB,GAAIP,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACzEM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBP,aAApB,EAAmC;AACjC;AACAc,IAAAA,UAAU,CAACT,IAAI,CAAC;AAAEE,MAAAA,IAAI,EAAER,WAAR;AAAqBU,MAAAA,OAAO,EAAEH,MAAM,CAACG,OAAP,CAAeM;AAA7C,KAAD,CAAL,EAA4D,KAA5D,CAAV;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,MAAlC;AAEA,UAAMU,WAAW,GAAG;AAAET,MAAAA,IAAI,EAAEL,WAAR;AAAqBO,MAAAA,OAAO,EAAEH,MAAM,CAACG;AAArC,KAApB;AAEA,WAAOJ,IAAI,CAACW,WAAD,CAAX;AACD;;AACD,SAAOX,IAAI,CAACC,MAAD,CAAX;AACD,CAdM;AAgBP,OAAO,MAAMW,iBAAiB,GAAIb,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACtEM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBN,UAApB,EAAgC;AAC9BiB,IAAAA,KAAK,CACH,wDAAwDZ,MAAM,CAACG,OAD5D,CAAL;AAIA,WAAOJ,IAAI,CAACC,MAAD,CAAX;AACD;;AAED,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAZM","sourcesContent":["import { fetchWeather } from '../features/FetchAPI/fetchWeather'\r\nimport {\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAIL,\r\n  UPDATE_CITY,\r\n} from '../features/Weather/store/actions'\r\n\r\nexport const fetchForecastStart = (store) => (next) => async (action) => {\r\n  if (action.type === FETCH_START) {\r\n    try {\r\n      const response = await fetchWeather(action.payload)\r\n      next({ type: FETCH_SUCCESS, payload: response })\r\n    } catch (error) {\r\n      next({ type: FETCH_FAIL, payload: error })\r\n    }\r\n  }\r\n\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastSuccess = (store) => (next) => async (action) => {\r\n  console.log(action)\r\n\r\n  if (action.type === FETCH_SUCCESS) {\r\n    // opetovne volani\r\n    setTimeout(next({ type: FETCH_START, payload: action.payload.name }), 10000)\r\n\r\n    console.log('AKCE FETCH SUCCESS', action)\r\n\r\n    const next_action = { type: UPDATE_CITY, payload: action.payload }\r\n\r\n    return next(next_action)\r\n  }\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastFail = (store) => (next) => async (action) => {\r\n  console.log(action)\r\n\r\n  if (action.type === FETCH_FAIL) {\r\n    alert(\r\n      'spojeni se serverem nebylo uspesne, nastala chyba: ' + action.payload,\r\n    )\r\n\r\n    return next(action)\r\n  }\r\n\r\n  return next(action)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\javascript\\\\s1-redux\\\\src\\\\features\\\\Todos\\\\containers\\\\TodoFormContainer.jsx\";\nimport React from 'react';\nimport TodoForm from '../components/TodoForm';\nimport { connect } from 'react-redux';\nimport { ADD_TASK, SET_TASK, RESET_TASK } from '../store/actions';\n\nconst mapStateToProps = state => {\n  return {\n    task: state.todos.task,\n    todoTasks: state.todoTasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const addTask = payload => {\n    dispatch({\n      type: ADD_TASK,\n      payload: payload\n    });\n  };\n\n  const setTask = event => dispatch({\n    type: SET_TASK,\n    payload: event.target.value\n  });\n\n  const resetTask = () => dispatch({\n    type: RESET_TASK,\n    payload: ''\n  });\n\n  const setTaskAndReset = payload => dispatch({\n    type: SET_TASK,\n    payload: payload\n  }, resetTask());\n\n  return {\n    addTask: addTask,\n    setTaskAndReset: setTaskAndReset\n  };\n};\n\nconst TodoFormContainer = ({\n  task,\n  setTaskAndReset,\n  addTask\n}) => {\n  return React.createElement(TodoForm, {\n    task: task,\n    setTaskAndReset: setTaskAndReset,\n    addTask: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFormContainer);","map":{"version":3,"sources":["C:/javascript/s1-redux/src/features/Todos/containers/TodoFormContainer.jsx"],"names":["React","TodoForm","connect","ADD_TASK","SET_TASK","RESET_TASK","mapStateToProps","state","task","todos","todoTasks","mapDispatchToProps","dispatch","addTask","payload","type","setTask","event","target","value","resetTask","setTaskAndReset","TodoFormContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,kBAA/C;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACE,KAAN,CAAYD,IADb;AAELE,IAAAA,SAAS,EAAEH,KAAK,CAACG;AAFZ,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,QAAMC,OAAO,GAAGC,OAAO,IAAI;AACzBF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEZ,QAAR;AAAkBW,MAAAA,OAAO,EAAEA;AAA3B,KAAD,CAAR;AACD,GAFD;;AAGA,QAAME,OAAO,GAAGC,KAAK,IACnBL,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,QAAR;AAAkBU,IAAAA,OAAO,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAAxC,GAAD,CADV;;AAEA,QAAMC,SAAS,GAAG,MAAMR,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,UAAR;AAAoBS,IAAAA,OAAO,EAAE;AAA7B,GAAD,CAAhC;;AACA,QAAMO,eAAe,GAAGP,OAAO,IAC7BF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,QAAR;AAAkBU,IAAAA,OAAO,EAAEA;AAA3B,GAAD,EAAuCM,SAAS,EAAhD,CADV;;AAGA,SAAO;AACLP,IAAAA,OAAO,EAAEA,OADJ;AAELQ,IAAAA,eAAe,EAAEA;AAFZ,GAAP;AAID,CAdD;;AAgBA,MAAMC,iBAAiB,GAAG,CAAC;AAAEd,EAAAA,IAAF;AAAQa,EAAAA,eAAR;AAAyBR,EAAAA;AAAzB,CAAD,KAAwC;AAChE,SACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEL,IAAhB;AAAsB,IAAA,eAAe,EAAEa,eAAvC;AAAwD,IAAA,OAAO,EAAER,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACI,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CW,iBAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport TodoForm from '../components/TodoForm'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { ADD_TASK, SET_TASK, RESET_TASK } from '../store/actions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    task: state.todos.task,\r\n    todoTasks: state.todoTasks,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  const addTask = payload => {\r\n    dispatch({ type: ADD_TASK, payload: payload })\r\n  }\r\n  const setTask = event =>\r\n    dispatch({ type: SET_TASK, payload: event.target.value })\r\n  const resetTask = () => dispatch({ type: RESET_TASK, payload: '' })\r\n  const setTaskAndReset = payload =>\r\n    dispatch({ type: SET_TASK, payload: payload }, resetTask())\r\n\r\n  return {\r\n    addTask: addTask,\r\n    setTaskAndReset: setTaskAndReset,\r\n  }\r\n}\r\n\r\nconst TodoFormContainer = ({ task, setTaskAndReset, addTask }) => {\r\n  return (\r\n    <TodoForm task={task} setTaskAndReset={setTaskAndReset} addTask={addTask} />\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFormContainer)\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FETCH_START, FETCH_SUCCESS, FETCH_FAIL } from '../features/Weather/store/actions';\nexport const fetchForecastStart = store => next => async action => {\n  if (action.type === FETCH_START) {\n    try {\n      const response = await openWeatherMap.get(action.payload);\n      setTimeout(next({\n        type: FETCH_START,\n        payload: action.payload\n      }), 80000);\n      next({\n        type: FETCH_SUCCESS,\n        payload: response\n      });\n    } catch (error) {\n      next({\n        type: FETCH_FAIL,\n        payload: error\n      });\n    }\n  }\n\n  return next(action);\n};\nexport const fetchForecastSuccess = store => next => async action => {\n  console.log(action);\n\n  if (action.type === FETCH_SUCCESS) {\n    //co chci udelat kdyz je success?\n    console.log('AKCE FETCH SUCCESS', action);\n    return next(action);\n  }\n\n  return next(action);\n};\nexport const fetchForecastFail = store => next => async action => {\n  console.log(action);\n\n  if (action.type === FETCH_FAIL) {\n    alert('spojeni se serverem nebylo uspesne, nastala chyba: ' + action.payload);\n    return next(action);\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["C:/javascript/weather/src/middlewares/ForecastMiddleware.jsx"],"names":["FETCH_START","FETCH_SUCCESS","FETCH_FAIL","fetchForecastStart","store","next","action","type","response","openWeatherMap","get","payload","setTimeout","error","fetchForecastSuccess","console","log","fetchForecastFail","alert"],"mappings":"AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,UAHF,QAIO,mCAJP;AAMA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACvE,MAAIA,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,cAAc,CAACC,GAAf,CAAmBJ,MAAM,CAACK,OAA1B,CAAvB;AAEAC,MAAAA,UAAU,CAACP,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEP,WAAR;AAAqBW,QAAAA,OAAO,EAAEL,MAAM,CAACK;AAArC,OAAD,CAAL,EAAuD,KAAvD,CAAV;AAEAN,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEN,aAAR;AAAuBU,QAAAA,OAAO,EAAEH;AAAhC,OAAD,CAAJ;AACD,KAND,CAME,OAAOK,KAAP,EAAc;AACdR,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAEL,UAAR;AAAoBS,QAAAA,OAAO,EAAEE;AAA7B,OAAD,CAAJ;AACD;AACF;;AAED,SAAOR,IAAI,CAACC,MAAD,CAAX;AACD,CAdM;AAgBP,OAAO,MAAMQ,oBAAoB,GAAIV,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACzES,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBN,aAApB,EAAmC;AACjC;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCV,MAAlC;AAEA,WAAOD,IAAI,CAACC,MAAD,CAAX;AACD;;AACD,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAXM;AAaP,OAAO,MAAMW,iBAAiB,GAAIb,KAAD,IAAYC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACtES,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBL,UAApB,EAAgC;AAC9BgB,IAAAA,KAAK,CACH,wDAAwDZ,MAAM,CAACK,OAD5D,CAAL;AAIA,WAAON,IAAI,CAACC,MAAD,CAAX;AACD;;AAED,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAZM","sourcesContent":["import {\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAIL,\r\n} from '../features/Weather/store/actions'\r\n\r\nexport const fetchForecastStart = (store) => (next) => async (action) => {\r\n  if (action.type === FETCH_START) {\r\n    try {\r\n      const response = await openWeatherMap.get(action.payload)\r\n\r\n      setTimeout(next({ type: FETCH_START, payload: action.payload }), 80000)\r\n\r\n      next({ type: FETCH_SUCCESS, payload: response })\r\n    } catch (error) {\r\n      next({ type: FETCH_FAIL, payload: error })\r\n    }\r\n  }\r\n\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastSuccess = (store) => (next) => async (action) => {\r\n  console.log(action)\r\n\r\n  if (action.type === FETCH_SUCCESS) {\r\n    //co chci udelat kdyz je success?\r\n\r\n    console.log('AKCE FETCH SUCCESS', action)\r\n\r\n    return next(action)\r\n  }\r\n  return next(action)\r\n}\r\n\r\nexport const fetchForecastFail = (store) => (next) => async (action) => {\r\n  console.log(action)\r\n\r\n  if (action.type === FETCH_FAIL) {\r\n    alert(\r\n      'spojeni se serverem nebylo uspesne, nastala chyba: ' + action.payload,\r\n    )\r\n\r\n    return next(action)\r\n  }\r\n\r\n  return next(action)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD_CITY, REMOVE_CITY, SET_CITY, UPDATE_CITIES } from './actions';\nimport { loadStorage } from '../../../utils/localStore';\nconst preloadedState = loadStorage('weather');\nconst initialState = {\n  targetCity: '',\n  cities: preloadedState || []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      return { ...state,\n        cities: [...state.cities, {\n          name: action.payload.city_name,\n          date: new Date(),\n          data: action.payload.data\n        }]\n      };\n\n    case SET_CITY:\n      return { ...state,\n        targetCity: action.payload\n      };\n\n    case REMOVE_CITY:\n      return { ...state\n      };\n\n    case UPDATE_CITIES:\n      console.log(action.payload);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/javascript/weather/src/features/Weather/store/weatherReducer.js"],"names":["ADD_CITY","REMOVE_CITY","SET_CITY","UPDATE_CITIES","loadStorage","preloadedState","initialState","targetCity","cities","reducer","state","action","type","name","payload","city_name","date","Date","data","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,aAA1C,QAA+D,WAA/D;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AAEA,MAAMC,cAAc,GAAGD,WAAW,CAAC,SAAD,CAAlC;AAEA,MAAME,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,MAAM,EAAEH,cAAc,IAAI;AAFP,CAArB;;AAKA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKZ,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,MAAM,EAAE,CACN,GAAGE,KAAK,CAACF,MADH,EAEN;AACEK,UAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeC,SADvB;AAEEC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFR;AAGEC,UAAAA,IAAI,EAAEP,MAAM,CAACG,OAAP,CAAeI;AAHvB,SAFM;AAFH,OAAP;;AAWF,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAFd,OAAP;;AAIF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGS;AADE,OAAP;;AAGF,SAAKP,aAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACG,OAAnB;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA5BF;AA8BD,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import { ADD_CITY, REMOVE_CITY, SET_CITY, UPDATE_CITIES } from './actions'\r\nimport {loadStorage} from '../../../utils/localStore'\r\n\r\nconst preloadedState = loadStorage('weather')\r\n\r\nconst initialState = {\r\n  targetCity: '',\r\n  cities: preloadedState || [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case ADD_CITY:\r\n    return {\r\n      ...state,\r\n      cities: [\r\n        ...state.cities,\r\n        {\r\n          name: action.payload.city_name,\r\n          date: new Date(),\r\n          data: action.payload.data,\r\n        },\r\n      ],\r\n    }\r\n  case SET_CITY:\r\n    return {\r\n      ...state,\r\n      targetCity: action.payload,\r\n    }\r\n  case REMOVE_CITY:\r\n    return {\r\n      ...state,\r\n    }\r\n  case UPDATE_CITIES:\r\n    console.log(action.payload)\r\n    return {\r\n      ...state,\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}
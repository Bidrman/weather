{"ast":null,"code":"var _jsxFileName = \"C:\\\\javascript\\\\weather\\\\src\\\\features\\\\Form\\\\components\\\\Form.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from '../../../components/input/Input/Input';\nimport Checkbox from '../../../components/input/Checkbox/Checkbox'; // Peter, toto je jedno z mnoha řešení, kde se ale berou ty data na BS? koukal jsem se na redux-form tam a tam se do componenty zapisuje to HOC\n\nconst renderName = () => React.createElement(Input, {\n  labelName: \"Jmeno\",\n  id: \"firstName\",\n  placeholder: \"Krestni jmeno\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n});\n\nconst renderCheckbox = () => React.createElement(Checkbox, {\n  labelName: \"GDPR souhlas\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\n\nconst Form = props => {\n  console.log('props zde', props);\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"someText\",\n    placeholder: \"HTML input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    component: renderName,\n    placeholder: \"ReduxForm Field\",\n    name: \"Field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nexport default reduxForm({\n  form: 'testForm'\n})(Form);","map":{"version":3,"sources":["C:/javascript/weather/src/features/Form/components/Form.jsx"],"names":["React","Field","reduxForm","Input","Checkbox","renderName","renderCheckbox","Form","props","console","log","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,OAAOC,QAAP,MAAqB,6CAArB,C,CAEA;;AAEA,MAAMC,UAAU,GAAG,MACjB,oBAAC,KAAD;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,EAAE,EAAC,WAA5B;AAAwC,EAAA,WAAW,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,MAAMC,cAAc,GAAG,MAAM,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA7B;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEH,UAFb;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAhBD;;AAkBA,eAAeJ,SAAS,CAAC;AACvBS,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZJ,IAFY,CAAf","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Input from '../../../components/input/Input/Input'\r\nimport Checkbox from '../../../components/input/Checkbox/Checkbox'\r\n\r\n// Peter, toto je jedno z mnoha řešení, kde se ale berou ty data na BS? koukal jsem se na redux-form tam a tam se do componenty zapisuje to HOC\r\n\r\nconst renderName = () => (\r\n  <Input labelName=\"Jmeno\" id=\"firstName\" placeholder=\"Krestni jmeno\" />\r\n)\r\n\r\nconst renderCheckbox = () => <Checkbox labelName=\"GDPR souhlas\" />\r\n\r\nconst Form = props => {\r\n  console.log('props zde', props)\r\n  return (\r\n    <form>\r\n      <input type=\"text\" name=\"someText\" placeholder=\"HTML input\" />\r\n      <br />\r\n      <br />\r\n      <Field\r\n        type=\"text\"\r\n        component={renderName}\r\n        placeholder=\"ReduxForm Field\"\r\n        name=\"Field\"\r\n      />\r\n      <Field component={renderCheckbox} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'testForm',\r\n})(Form)\r\n"]},"metadata":{},"sourceType":"module"}